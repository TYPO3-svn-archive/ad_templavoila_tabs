
# If true, load jQuery via Google AJAX Libraries API.
[globalVar = LIT:1 = {$plugin.tx_adtemplavoilacycle.jQuery}]
page.includeJSlibs {
	tx_adtemplavoilaext_jquery = https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js
	tx_adtemplavoilaext_jquery.external = 1
}
[end]

page.includeJS {
	tx_adtemplavoilaext_cycle = EXT:ad_templavoila_cycle/res/js/jquery.cycle/jquery.cycle.all.min.js
}

# If a style is set, load user style.
page.includeCSS {
	tx_adtemplavoilacycle_style = {$plugin.tx_adtemplavoilacycle.style}
}

page.jsInline {
	# Remove URL of link and replace with anchor and initialize tabs. jQuery UI Tabs don't like RealURL anchors :(
	8427 = COA
	8427 {
		wrap = jQuery(document).ready(function(){ | });

		10 = COA
		10 {
			wrap = jQuery('.tx_adtemplavoilacycle .tx_adtemplavoilacycle_container').each(function(index, element){ jQuery(element).cycle({ | }); });

			10 = TEXT
			10.if.isTrue.data = register: field_effects
			10.dataWrap = fx: '{register: field_effects}',

			20 = TEXT
			20.if.isFalse.data = register: field_sync
			20.dataWrap = sync: 0,

			30 = TEXT
			30.if.isTrue.data = register: field_timeout
			30.dataWrap = timeout: {register: field_timeout},

			40 = TEXT
			40.if.isTrue.data = register: field_continuous
			40.dataWrap = continuous: 1,

			50 = TEXT
			50.if.isTrue.data = register: field_speed
			50.dataWrap = speed: {register: field_speed},

			60 = TEXT
			60.if.isTrue.data = register: field_speed_in
			60.dataWrap = speedIn: {register: field_speed_in},

			70 = TEXT
			70.if.isTrue.data = register: field_speed_out
			70.dataWrap = speedOut: {register: field_speed_out},

			# Default options.
			# Option pagerAnchorBuilder must be set to remove the pagination builder. So it can be set in the template manually. Must return a single pager item.
			80 = HTML
			80.value = pager: '.tx_adtemplavoilacycle .tx_adtemplavoilacycle_pagination ul', prev: '.tx_adtemplavoilacycle .tx_adtemplavoilacycle_browser .prev', next: '.tx_adtemplavoilacycle .tx_adtemplavoilacycle_browser .next', pagerAnchorBuilder: function(index, element){ return jQuery('.tx_adtemplavoilacycle .tx_adtemplavoilacycle_pagination a:eq('+index+')'); }

			# User defined options
			90 = TEXT
			90.if.isTrue.data = register: field_options
			90.data = register: field_options
			90.wrap = ,|
		}
	}
}

codeCycle >
codeCycle = COA
codeCycle {
	stdWrap.dataWrap = <div id="tx_adtemplavoilacycle_uid{register: tx_templavoila_pi1.parentRec.uid}" class="tx_adtemplavoilacycle"{register: container_style}> | </div>

	10 = LOAD_REGISTER
	10 {
		container_style.cObject = COA
		container_style.cObject {
			stdWrap.required = 1
			stdWrap.noTrimWrap = | style="|"|

			10 = TEXT
			10 {
				field = field_width
				wrap = width: | px;
				fieldRequired = field_width
			}

			20 = TEXT
			20 {
				field = field_height
				wrap = height: | px;"
				fieldRequired = field_height
			}
		}

		field_effects.field = field_effects
		field_sync.field = field_sync
		field_timeout.field = field_timeout
		field_continuous.field = field_continuous
		field_speed.field = field_speed
		field_speed_in.field = field_speed_in
		field_speed_out.field = field_speed_out
		field_options.field = field_options
	}

	20 = CASE
	20 {
		key.field = field_navigation
		browser = TEXT
		browser {
			dataWrap = <div class="tx_adtemplavoilacycle_browser"><a class="prev" href="#" onclick="javascript: return false;">{LLL:EXT:ad_templavoila_cycle/lang/locallang.xml:template.prev}</a> <a class="next" href="#" onclick="javascript: return false;">{LLL:EXT:ad_templavoila_cycle/lang/locallang.xml:template.next}</a></div>
		}

		pagination = RECORDS
		pagination {
			wrap = <div class="tx_adtemplavoilacycle_pagination"><ul> | </ul></div>
			source.current = 1
			tables = tt_content
	
			conf.tt_content = TEXT
			conf.tt_content {
				outerWrap = <li> | </li>
				data = cObj : parentRecordNumber
				typolink.parameter.dataWrap = #c{field:uid}
				typolink.ATagParams = onclick="javascript: return false;"
			}
		}
	}

	30 = RECORDS
	30 {
		stdWrap.dataWrap = <div class="tx_adtemplavoilacycle_container"{register: container_style}> | </div>
		source.current = 1
		tables = tt_content
	}
}